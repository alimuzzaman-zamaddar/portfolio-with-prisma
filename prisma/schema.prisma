

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  name       String
  email      String     @unique
  password   String?
  role       Role       @default(OWNER)
  phone      String?
  picture    String?
  bio        String?
  location   String?
  website    String?
  github     String?
  linkedin   String?
  twitter    String?
  status     UserStatus @default(ACTIVE)
  isVerified Boolean    @default(false)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  posts      Post[]
  projects   Project[]
}

model Post {
  id          Int      @id @default(autoincrement())
  title       String
  slug        String   @unique
  content     String
  excerpt     String?
  thumbnail   String?
  isFeatured  Boolean  @default(false)
  isPublished Boolean  @default(true)
  tags        String[]
  views       Int      @default(0)
  authorId    Int
  author      User     @relation(fields: [authorId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Project {
  id          Int      @id @default(autoincrement())
  title       String
  slug        String   @unique
  description String
  content     String?
  thumbnail   String?
  liveUrl     String?
  githubUrl   String?
  techStack   String[]
  isFeatured  Boolean  @default(false)
  isPublished Boolean  @default(true)
  order       Int      @default(0)
  authorId    Int
  author      User     @relation(fields: [authorId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Role {
  OWNER
  ADMIN
  USER
}

enum UserStatus {
  ACTIVE
  INACTIVE
  BLOCKED
}